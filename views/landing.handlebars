<div class="main-body">
    <div class="row">
        <h2>Search</h2>
    </div>

    <div class="row">
        <div class="col-md-2"></div>
        <div class="col-md-2 index_select">

            <div>
                <select class="form-control" id="selected_index">
                    <option value="makt">Material</option>
                    <option value="customer">Customer</option>
                </select>
            </div>

        </div>
        <div class="col-md-4"></div>
        <div class="col-md-3" style="text-align:left;">
            <div class="btn-group btn-toggle">
                <button class="btn btn-s btn-primary search active">Text search</button>
                <button class="btn btn-s mass-search btn-default">Mass search</button>
            </div>
        </div>
        <div class="col-md-2"></div>
    </div>
    <div class="row">
        <div style="margin-top:50px;">
            <div id='massSearch' style="display:none;" class="row">
                <div class="col-md-3"></div>
                <div class="container col-md-6">
                    <form class="form-horizontal">
                        <div class="form-group">
                            <label class="col-sm-6 control-label" for="phrase_column">Search phrase column:</label>
                            <div class="col-sm-3">
                                <input type="text" class="form-control" id="phrase_column" placeholder="Enter search phrase column"
                                    value='A'></input>
                                <!-- <small id="searchPhraseHelp" class="form-text text-muted">Enter the column name that
                                contains
                                the search phrase.</small>-->
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-6 control-label" for="result_coulmn">Search Result Column:</label>
                            <div class="col-sm-3">
                                <input type="text" class="form-control" id="result_coulmn" placeholder="Search result column"
                                    value='B'></input>
                                <!-- <small id="searchResultHelp" class="form-text text-muted">Enter the column name that
                                will
                                contain the search results.</small> -->
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-6 control-label" for="row_start">Start row:</label>
                            <div class="col-sm-3">
                                <input type="text" class="form-control" id="row_start" placeholder="Search Row" value='1'></input>
                                <!-- <small id="startRowHelp" class="form-text text-muted">Enter the row number to start
                                search..</small> -->
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-6"></div>
                            <div class="col-sm-6">
                                <button type="button" class="btn btn-primary pull-left upload-button"><span style="margin-right:5px;">Upload</span> <i class="fa fa-upload" style="font-size:16px"></i></button>
                                <button type="button" class="btn btn-primary pull-left download-button hidden"><span
                                        style="margin-right:5px;">Download</span> <i class="fa fa-download" style="font-size:16px"></i></button>
                                <button type="button" style="margin-left:5px;" class="btn btn-info pull-left reset-mass-search-button hidden"><span
                                        style="margin-right:5px;">Reset</span> <i class="fa fa-refresh" style="font-size:16px"></i></button>
                            </div>

                        </div>
                    </form>


                    <div class="col-md-6">

                        <form id="upload-photos" method="post" action="/api/uploadFile" enctype="multipart/form-data">
                            <div class="form-group">
                                <input id="photos-input" class="hidden" type="file" name="photos[]" multiple="multiple">
                            </div>
                            <input type="hidden" name="csrf_token" value="just_a_text_field" />
                            <!--<input class="btn btn-default" type="submit" name="Photo Uploads" value="Upload Photos" />-->
                        </form>
                    </div>
                </div>
                <div class="col-md-3"></div>
            </div>

            <div id='textSearch' class="row">
                <div class="col-md-3">
                    <label class="switch">
                        <input type="checkbox" id="exactMatch">
                        <span class="slider round"></span>
                    </label>
                </div>
                <div class="col-md-6">
                    <div id="custom-search-input row">
                        <div class="input-group col-md-12">

                            <input type="text" id="search-text" class="form-control input-lg" placeholder="Search ..." />

                            <span class="input-group-btn">
                                <button class="btn btn-info btn-lg" id="search" type="button">
                                    Search
                                </button>
                            </span>
                        </div>

                    </div>
                </div>
                <div class="col-md-3"></div>

            </div>
        </div>
    </div>
    <div class="row" id="tableData">
        <div class="table-responsive">
            <table id="customer_table" class="display hidden customer_results table table-hover" style="width: 95%">
                <thead>
                <tr>
                    <th style="color:#3c763d" class="resultCount"></th>
                </tr>
                <tr>
                    <th>kna1_kunnr</th>
                    <th>kna1_land1</th>
                    <th>kna1_name1</th>
                    <th>kna1_name2</th>
                    <th>kna1_ort01</th>
                    <th>kna1_pstlz</th>
                    <th>kna1_stras</th>
                    <th>knb1_props</th>
                    <th>knvk_props</th>
                </tr>

                <tbody>
                </tbody>
                </thead>
            </table>
        </div>
        <div class="table-responsive">
            <table id="meterial_table" class="display hidden results table table-hover" style="width:95%">
                <thead>
                <tr>
                    <th style="color:#3c763d" class="resultCount"></th>
                </tr>
                <tr>
                    <th>Material Number</th>
                    <th>Material Type</th>
                    <th>Description</th>
                    <th>Material Group</th>
                    <th>Packaging Material Type</th>
                    <th>Created On</th>
                    <th>Name of Person who Created the Object</th>
                    <th>Maintenance status</th>
                    <th>Industry Sector</th>
                    <th>Base Unit of Measure</th>
                    <th>Product hierarchy</th>
                </tr>

                <tbody>
                </tbody>
                </thead>

            </table>
        </div>
        <div class="row">
            <div id="show-pagination">
            </div>
        </div>
    </div>
</div>



<script type="text/html" id="template">
    <% if(data.showPrevious){%>
    <input type="button" onclick="previousSlotPagination()" class="pagination previous" value="<">
    <%}%>
    <%for(let dcount=data.start;dcount<=data.count;dcount++){%>
    <a onclick="showNextPage(this)" id="page_no_<%=dcount%>" href="javascript:void(0)"
       value=<%=dcount%>><b><%=dcount%></b></a>
    <%}%>

    <% if(data.showNext){%>
    <input id="nextSlot" type="button" onclick="nextSlotPagination()" class="pagination next" value=">">
    <%}%>
</script>
<script>
    function showNextPage(that) {
        let text = getUrlParameter('search-text')
        let pageNo = $(that).attr('value')
        let index = getUrlParameter('index') || 'makt'
        let exactMatch=getUrlParameter('exactMatch') || false
        let redirectText = '/?search-text=' + text
        if (pageNo > 0) {
            redirectText = redirectText + '&page=' + pageNo + '&index=' + index + '&exactMatch='+exactMatch
        }
        if (!pageNo || pageNo < 0) {
            pageNo = 0
        }

        location.href = redirectText
    }
    let maximumPagination = 0


    function getUrlParameter(sParam) {
            var sPageURL = decodeURIComponent(window.location.search.substring(1)),
                sURLVariables = sPageURL.split('&'),
                sParameterName,
                i;

            for (i = 0; i < sURLVariables.length; i++) {
                sParameterName = sURLVariables[i].split('=');
                if (sParameterName[0] === sParam) {
                    return sParameterName[1] === undefined ? true : sParameterName[1];
                }
            }
        };

        let text = getUrlParameter('search-text')
        let index = getUrlParameter('index') || "makt"
        let exactMatch=getUrlParameter('exactMatch') || false

    if(exactMatch==='true') {
        $("#exactMatch").prop("checked", true)
    }
    $("#exactMatch").change(function() {

            $("#search").trigger('click')

    });
         $("#search-text").val(text)
        $("#selected_index").val(index)
        if (text && index) {
            let pageNo = getUrlParameter('page')
            if (!pageNo || !pageNo / 1) {
                pageNo = 0
            }
            if (pageNo > 0) {
                pageNo = pageNo - 1
            }

            loadMore(index, text.trim(), pageNo)
        }

        function nextSlotPagination() {
            let text = getUrlParameter('search-text')
            let pageNo = getUrlParameter('page')
            let index = getUrlParameter('index') || 'makt'
            let exactMatch=getUrlParameter('exactMatch') || false
            if (!pageNo) {
                pageNo = 0
            }
            pageNo = parseInt(pageNo) + 1
            if (text) {
                location.href = '/?search-text=' + text + '&page=' + pageNo + '&index=' + index+'&exactMatch='+exactMatch
            }
        }

        function previousSlotPagination() {
            let text = getUrlParameter('search-text')
            let pageNo = getUrlParameter('page')
            let index = getUrlParameter('index') || 'makt'
            let exactMatch=getUrlParameter('exactMatch') || false
            if (!pageNo) {
                pageNo = 0
            }
            pageNo = parseInt(pageNo) - 1
            if (pageNo < 0) {
                pageNo = 0
            }
            if (text) {
                location.href = '/?search-text=' + text + '&page=' + pageNo + '&index=' + index+'&exactMatch='+exactMatch
            }
        }

        function showNextPage(that) {
            let text = getUrlParameter('search-text')
            let pageNo = $(that).attr('value')
            let index = getUrlParameter('index') || 'makt'
            let redirectText = '/?search-text=' + text
            let exactMatch=getUrlParameter('exactMatch') || false
            if (pageNo > 0) {
                redirectText = redirectText + '&page=' + pageNo + '&index=' + index+'&exactMatch='+exactMatch
            }
            if (!pageNo || pageNo < 0) {
                pageNo = 0
            }

            location.href = redirectText
        }

        let showNext = false
        let showPrevious = false


        function loadMore(index, searchText, pagination) {
            //  let searchText = $("#search-text").val().trim()
            if (!index || index == "") {
                return false
            }
            let source = []
            if (index == 'makt') {
                source = ['mara_matnr', 'mara_mtart', 'mara_matkl', 'mara_vhart', 'mara_ersda', 'mara_ernam', 'mara_pstat', 'mara_mbrsh', 'mara_meins', 'mara_prdha', 'makt_props']
            }
            if (searchText && (searchText == "" || !searchText || searchText.length < 3)) {
                $('#meterial_table').addClass('hidden')
                $('#loadMore').addClass('hidden')
                return false
            }
            let exactMatch=$("#exactMatch").prop("checked")
            $.ajax({
                url: '../api/search',
                data: JSON.stringify({
                    index: index,
                    text: searchText,
                    from: pagination * 10,
                    exactMatch:exactMatch,
                    source: source,
                }),
                method: 'POST',
                dataType: 'json',
                contentType: "application/json",
                success: function (data) {
                    if (index == 'makt') {
                        $('.results').removeClass('hidden')
                    } else {
                        $('.customer_results').removeClass('hidden')
                    }
                    var template = $('#template').html()
                    let pageCount = Math.floor(data.count / 10)
                    let extraPage = Math.floor(data.count % 10)
                    if (pageCount > 0 && extraPage > 0) {
                        pageCount = pageCount + 1
                    }
                    let pageStart = 1
                    if (pagination > 0) {
                        showPrevious = true
                    }
                    if (pageCount > 5) {
                        if (pagination <= 0) {
                            pageStart = pagination + 1
                        } else {
                            pageStart = pagination
                        }
                        pageCount = pagination + 5
                        $(".next").removeClass('hidden')
                        showNext = true
                    }

                    var compiled_html = _.template(template)({
                        data: { start: pageStart, count: pageCount, showNext: showNext, showPrevious: showPrevious }
                    })
                    if (data.result.length > 1) {
                        // console.log(data.time)
                        $(".resultCount").html("<span>" + data.time + "</span>" + "<h3></h3>")
                    }

                    if (data.count > 10) {
                        $("#show-pagination").append(compiled_html)
                    }
                    if (data.result.length < 10) {
                        $("#nextSlot").attr('disabled', true)
                    }
                    let pageNo = pagination + 1
                    $('#page_no_' + pageNo).addClass('clicked')
                    let final_data = data.result
                    var counter = 1;
                    if (index == "makt") {
                        console.log(final_data)
                        for (let j = 0; j < final_data.length; j++) {
                            let maktMaktx = final_data[j]['makt_props'].map(function (data) {
                                return data.makt_maktx
                            })
                            maktMaktx = maktMaktx.join("<br /><br />");
                            $('#meterial_table').dataTable().fnAddData([
                                final_data[j].mara_matnr,
                                final_data[j].mara_mtart,
                                maktMaktx,
                                final_data[j].mara_matkl,
                                final_data[j].mara_vhart,
                                final_data[j].mara_ersda,
                                final_data[j].mara_ernam,
                                final_data[j].mara_pstat,
                                final_data[j].mara_mbrsh,
                                final_data[j].mara_meins,
                                final_data[j].mara_prdha,

                            ]);
                        }
                    } else {
                        for (let j = 0; j < final_data.length; j++) {
                            let knb1_props = []

                            final_data[j]["knb1_props"].forEach(function (data) {
                                let html_data = []
                                html_data.push("knb1_akont: " + data["knb1_akont"] + ',' + " knb1_bukrs : " + data['knb1_bukrs'] + ',' + " knb1_kunnr: " + data['knb1_kunnr'] + ',' + " knb1_zterm :" + data['knb1_zterm'])
                                knb1_props.push(html_data)
                            })
                            knb1_props = knb1_props.join("<br /><br />");

                            let knvk_props = []
                            final_data[j]["knvk_props"].forEach(function (data) {
                                let html_data = []
                                html_data.push("knvk_kunnr: " + data['knvk_kunnr'] + ',' + " knvk_namev: " + data['knvk_namev'] + ',' + " knvk_name1: " + data['knvk_name1'])
                                knvk_props.push(html_data)
                            })
                            knvk_props = knvk_props.join("<br /><br />");
                            $('#customer_table').dataTable().fnAddData([
                                final_data[j].kna1_kunnr,
                                final_data[j].kna1_land1,
                                final_data[j].kna1_name1,
                                final_data[j].kna1_name2,
                                final_data[j].kna1_ort01,
                                final_data[j].kna1_pstlz,
                                final_data[j].kna1_stras,
                                knb1_props,
                                knvk_props


                            ]);
                        }
                    }

                    pagination++;

                }, error: function (error) {

                    let msg = JSON.parse(error.responseText)
                    alert(msg.message)
                }
            })
        }

        $("#search").on('click', function () {
            let searchText = $("#search-text").val().trim()
            let exactMatch=$("#exactMatch").prop("checked")
            let index = $("#selected_index").val()
            if(!searchText || searchText=="")
            {
                return false
            }
            if (!index || index == "") {
                alert('please select an index')
                return false
            }

            else {
                location.href = '/?search-text=' + searchText + '&index=' + index+'&exactMatch='+exactMatch
            }
        })
        $("#search-text").bind("keypress", {}, keypressInBox);

        function keypressInBox(e) {
            var code = (e.keyCode ? e.keyCode : e.which);
            let exactMatch=$("#exactMatch").prop("checked")
            if (code == 13) { //Enter keycode
                e.preventDefault();
                let searchText = $("#search-text").val().trim()
                let index = $("#selected_index").val()
                if(!searchText || searchText=="")
                {
                    return false
                }
                if (!index || index == "") {
                    alert('please select an index')
                    return false
                } else {
                    location.href = '/?search-text=' + searchText + '&index=' + index + '&exactMatch='+exactMatch
                }
            }
        };
    $(document).ready(function () {


        $('#meterial_table').DataTable({
            "dom": 'Zlfrtip',
            "colResize": {
                "tableWidthFixed": false
            },
            "paging": false,
            "order": []

        });
        $('#customer_table').DataTable({
            "dom": 'Zlfrtip',
            "colResize": {
                "tableWidthFixed": false
            },
            "paging": false,
            "order": []

        })
    })
            /* $('#search-text').on('keyup', function (word) {
                 let txt = $('#search-text').val().trim()
                 if (txt.length > 2) {
                     $.ajax({
                         url: '/api/suggest-search',
                         method: 'POST',
                         dataType: 'json',
                         data:JSON.stringify({
                             text:txt,
                             source:['mara_matnr','mara_mtart','mara_ernam','makt_props.makt_maktx']
                         }),
                         contentType: "application/json",
                         success: function (data) {
                                 let showText=[]
                                 let mara_ernam=data.mara_ernam.split(' ')
 
 
                         }
                     })
                     //
                 }
             })
             */



        $("#photos-input").on('change', function () {
            $("#upload-photos").submit();

        })
        // file upload


        $('#upload-photos').on('submit', function (event) {
            event.preventDefault();

            // Get the files from input, create new FormData.
            var files = $('#photos-input').get(0).files,
                formData = new FormData();

            if (files.length === 0) {
                alert('Select atleast 1 file to upload.');
                return false;
            }

            if (files.length > 1) {
                alert('You can only upload up to 3 files.');
                return false;
            }

            // Append the files to the formData.
            for (var i = 0; i < files.length; i++) {
                var file = files[i];
                formData.append('photos[]', file, file.name);
            }
            let exactMatch=$("#exactMatch").prop("checked")
            formData.append('index', $('#selected_index').val())
            formData.append('row_start', $('#row_start').val())
            formData.append('phrase_column', $('#phrase_column').val())
            formData.append('result_coulmn', $('#result_coulmn').val())
            formData.append('exactMatch',exactMatch)
            // Note: We are only appending the file inputs to the FormData.
            uploadFiles(formData);
        });

        function uploadFiles(formData) {
            $.ajax({
                url: '/api/uploadFile',
                method: 'post',
                data: formData,
                processData: false,
                contentType: false,
                xhr: function () {
                    var xhr = new XMLHttpRequest();

                    // Add progress event listener to the upload.
                    xhr.upload.addEventListener('progress', function (event) {
                        var progressBar = $('.progress-bar');

                        if (event.lengthComputable) {
                            var percent = (event.loaded / event.total) * 100;
                            progressBar.width(percent + '%');

                            if (percent === 100) {
                                progressBar.removeClass('active');
                            }
                        }
                    });
                    return xhr;
                }
            }).done(handleSuccess).fail(function (xhr, status) {
                document.getElementById("photos-input").value = "";
              alert(xhr.responseJSON.message)
            });
        }

        function handleSuccess(data) {
            if (data.length > 0) {
                $('.upload-button').addClass('hidden')
                $('.download-button').removeClass('hidden')
                $('.reset-mass-search-button').removeClass('hidden')
                $('.download-button').attr('fileName', data[0].publicPath)

            } else {
                alert('No images were uploaded.')
            }
        }

        $('.reset-mass-search-button').on('click', function () {
            document.getElementById("photos-input").value = "";
            $('.download-button').addClass('hidden')
            $('.upload-button').removeClass('hidden')
            $(this).addClass('hidden')
        })
        $('.upload-button').on('click', function () {
            $('#photos-input').trigger('click')
        })

        $('.download-button').on('click', function (e) {

            e.preventDefault();

            var link = document.createElement('a');

            var fileName = $(this).attr('filename').substr($(this).attr('filename').lastIndexOf('/') + 1);

            link.href = '../api/download/' + fileName;

            link.download = fileName.substr(fileName.lastIndexOf('/') + 1);

            link.click();

        })

    $('.btn-toggle').click(function () {
        var previousActive = $(this).find('.btn.active');
        if ($(previousActive).hasClass('mass-search')) {
            $('#massSearch').hide();
            $('#textSearch').show();

            $('#tableData').removeClass('hidden')
        }

        if ($(previousActive).hasClass('search')) {
            console.log('search');
            $('#textSearch').hide();
            $('#massSearch').show();
            $('#tableData').addClass('hidden')
        }

        $(this).find('.btn').toggleClass('active');

        if ($(this).find('.btn-primary').size() > 0) {
            $(this).find('.btn').toggleClass('btn-primary');
        }


        $(this).find('.btn').toggleClass('btn-default');
    });


</script>